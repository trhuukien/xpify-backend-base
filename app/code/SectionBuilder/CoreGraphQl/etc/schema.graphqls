enum Tone @doc(description: "Tone in polaris") {
    success
    warning
    critical
    #    ...
}

type Query {
    getPricingPlans: [PricingPlans]
        @doc(description: "")
        @resolver(class: "SectionBuilder\\CoreGraphQl\\Model\\Resolver\\PricingPlansQuery")
    getSortOptions: [SortOption]
        @doc(description: "")
        @resolver(class: "SectionBuilder\\CoreGraphQl\\Model\\Resolver\\SortOptionsQuery")
}

type Mutation {
    redirectBillingUrl(name: String!, interval: PricingPlanInterval!, is_plan: Boolean!): Message
        @doc(description: "")
        @resolver(class: "SectionBuilder\\CoreGraphQl\\Model\\Resolver\\BillingMutation")
    cancelPlan(name: String!): Message
        @doc(description: "")
        @resolver(class: "SectionBuilder\\CoreGraphQl\\Model\\Resolver\\PlanCancelMutation")
}

type PricingPlans @doc(description: "") {
    plan: PricingPlan
    information: Information
}

type Information @doc(description: "") {
    name: String
    currentPeriodEnd: String
    trialDays: String
}

type SortOption {
    label: String
    value: String
    directionLabel: String
}

type Message @doc(description: "") {
    message: String
    tone: Tone
}
