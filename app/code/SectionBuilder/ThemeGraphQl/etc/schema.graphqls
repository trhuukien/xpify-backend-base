enum ThemeRoles @doc(description: "Follow: https://shopify.dev/docs/api/liquid/objects#theme-role") {
    main
    unpublished
    demo
    development
}

type Query {
    getThemes: [Theme]
        @doc(description: "Retrieves a list of themes")
        @resolver(class: "SectionBuilder\\ThemeGraphQl\\Model\\Resolver\\ThemesQuery")
    getTheme(id: String!): Theme
        @doc(description: "Retrieves a single theme by its ID")
        @resolver(class: "SectionBuilder\\ThemeGraphQl\\Model\\Resolver\\ThemeQuery")
}

type Mutation {
    createTheme(name: String!, src: String!, role: ThemeRoles! = unpublished): Theme
        @doc(description: "Creates a theme")
        @resolver(class: "SectionBuilder\\ThemeGraphQl\\Model\\Resolver\\CreateThemeMutation")
    updateTheme(id: String!, role: ThemeRoles!): Theme
        @doc(description: "Modify an existing Theme")
        @resolver(class: "SectionBuilder\\ThemeGraphQl\\Model\\Resolver\\UpdateThemeMutation")
    deleteTheme(id: String!): Theme
        @doc(description: "Remove an existing Theme")
        @resolver(class: "SectionBuilder\\ThemeGraphQl\\Model\\Resolver\\DeleteThemeMutation")
}

type Theme @doc(description: "Follow response Shopify API") {
    id: String
    name: String
    created_at: String
    updated_at: String
    role: String
    theme_store_id: String
    previewable: Boolean
    processing: Boolean
    admin_graphql_api_id: String
    errors: String
}
