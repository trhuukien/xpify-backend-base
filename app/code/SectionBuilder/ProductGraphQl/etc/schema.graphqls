enum SortEnum @doc(description: "") {
    asc @doc(description:"")
    desc @doc(description:"")
}

type Query {
    getSections(
        search: String,
        filter: SectionFilterInput,
        sort: SectionSortInput,
        pageSize: Int = 20,
        currentPage: Int = 1
    ): Sections
    @doc(description: "")
    @resolver(class: "SectionBuilder\\ProductGraphQl\\Model\\Resolver\\SectionsQuery")
    getSection(key: String!): SectionInterface
    @doc(description: "")
    @resolver(class: "SectionBuilder\\ProductGraphQl\\Model\\Resolver\\SectionQuery")
    getRelatedSections(key: String!): [SectionInterface]
    @doc(description: "")
    @resolver(class: "SectionBuilder\\ProductGraphQl\\Model\\Resolver\\SectionsRelatedQuery")
    getGroupSections: [SectionInterface]
    @doc(description: "")
    @resolver(class: "SectionBuilder\\ProductGraphQl\\Model\\Resolver\\GroupSectionsQuery")
    getGroupSection(key: String!): SectionInterface
    @doc(description: "")
    @resolver(class: "SectionBuilder\\ProductGraphQl\\Model\\Resolver\\GroupSectionQuery")
    getSectionsBuy(merchant_shop: String): [SectionInterface]
    @doc(description: "")
    @resolver(class: "SectionBuilder\\ProductGraphQl\\Model\\Resolver\\SectionsBuyQuery")
    getSectionsInstall(merchant_shop: String): [SectionInterface]
    @doc(description: "")
    @resolver(class: "SectionBuilder\\ProductGraphQl\\Model\\Resolver\\SectionsInstallQuery")
    getSortOptions: [SortOption]
    @doc(description: "")
    @resolver(class: "SectionBuilder\\ProductGraphQl\\Model\\Resolver\\SortOptionsQuery")
}

input SectionFilterInput @doc(description: "") {
    product_id: [Int] @doc(description: "")
    category_id: [Int] @doc(description: "")
    tag_id: [Int] @doc(description: "")
    plan_id: [Int] @doc(description: "")
    price: PriceFilter @doc(description: "")
}

type Sections {
    items: [SectionInterface]
    total_count: Int
    page_info: PageInfo
}

input SectionSortInput @doc(description: "") {
    column: String @doc(description: "")
    order: SortEnum @doc(description: "")
}

input PriceFilter @doc(description: "") {
    min: Int @doc(description: "")
    max: Int @doc(description: "")
}

type PageInfo {
    current_page: Int
    page_size: Int
    total_pages: Int
}

interface SectionInterface @typeResolver(class: "\\SectionBuilder\\ProductGraphQl\\Model\\Resolver\\SectionTypeResolver") {
    entity_id : ID
    is_enable: Boolean
    name: String
    images: [Image]
    url_key: String
    price: Float
    description: String
    demo_link: String
    categories: [String]
    tags: [String]
    type_id: String
}
type Section implements SectionInterface {
    actions: Action
    installed: [Install]
    pricing_plan: PricingPlan
    version: String
    release_note: String
    src: String
    plan_id : String
}
type GroupSection implements SectionInterface {
    child_ids: [ID!]
    actions: GroupAction
}

type GroupAction {
    purchase: Boolean
}

type Image @doc(description: "") {
    src: String
}

type Action @doc(description: "Show button") {
    install: Boolean
    purchase: Boolean
    plan: Boolean
}

type Install @doc(description: "") {
    theme_id: String
    product_version: String
}

type SectionLite @doc(description: "") {
    product_id: String
    name: String
    price: String
    version: String
    url_key: String
    images: [Image]
    installed: [Install]
}

type SortOption {
    label: String
    value: String
    directionLabel: String
}
