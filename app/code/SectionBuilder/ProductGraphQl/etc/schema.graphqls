type Query {
    getSections(
        search: String,
        filter: SectionFilterInput,
        pageSize: Int = 20,
        currentPage: Int = 1
    ): Sections
        @doc(description: "")
        @resolver(class: "SectionBuilder\\ProductGraphQl\\Model\\Resolver\\SectionsQuery")
    getSection(name: String!): Section
        @doc(description: "")
        @resolver(class: "SectionBuilder\\ProductGraphQl\\Model\\Resolver\\SectionQuery")
}

input SectionFilterInput @doc(description: "") {
    category_id: [Int] @doc(description: "")
    tag_id: [Int] @doc(description: "")
    plan_id: [Int] @doc(description: "")
}

type Sections {
    items: [Section]
    total_count: Int
    page_info: PageInfo
}

type PageInfo {
    current_page: Int
    page_size: Int
    total_pages: Int
}

type Section @doc(description: "") {
    entity_id : String
    is_enable: Boolean
    plan_id : String
    plan_need_subscribe : String
    name: String
    price: Float
    src: String
    is_show_install: Boolean
    is_show_purchase: Boolean
    is_show_plan: Boolean
}
